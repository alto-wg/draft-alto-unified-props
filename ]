# Overview: Basic Concepts

<!-- Entity -> Property -> Resource -> Entity Domain -> Aggreated Entity Domain -->

## Entity {#con-entity}

<!-- FIXME:
This section introduces a new concept and deserves more explanations before
diving in the technical "how to handle".
For instance:
- what kind of object other than an addressable ALTO endpoint is eligible to be
  an ALTO entity?
- an entity must be related to network address(es) e.g. entity such as PID, ASN
  nb, Country code have a defined mapping to IP or cellular addresses.
-->

The entity concept generalizes the concept of the endpoint defined in Section 2.1 of
[](#RFC7285). An entity is an object that can be an endpoint and is identified
by its network address, but can also be an object that has a defined mapping to
a set of one or more network addresses or is even not related to any network
address.

<!-- Examples of entities -->

Examples of eligible entities are:

- a PID, defined in [](#RFC7285), that has a provider defined human readable
  abstract identifier defined by a ALTO network map, which maps a PID to a set of ipv4 and ipv6 addresses;
- an autonomous system (AS), that has an AS number (ASN) as its identifier 
  and maps to a set of ipv4 and ipv6 addresses;
- a region representing a country, that is identified by its country code defined 
  by ISO 3166 and maps to a set of cellular addresses;
- a TCP/IP network flow, that has a server defined identifier consisting of the 
  defining TCP/IP 5-Tuple, , which is an example that all endpoints 
  are entities while not all entities are endpoints;
- a routing element, that is specified in [](#RFC7921) and includes routing
  capability information;
- an abstract network element, that has a server defined identifier and
  represents a network node, link or their aggregation.

<!--
An entity is an object with a (possibly empty) set of properties.
It MAY or MAY NOT be related to a network address. There are a lot of examples
of entities, such as applications or end-hosts in a communication network, cells
in a wireless network, network flows, network functions, routing elements in a
routing system or even general network elements.
-->

<!--
Each entity MUST be in one and only one domain, such as the IPv4 domain, the
IPv6 domain or PID domain (defined in this document), and has a unique identifier.
-->

## Entity Property {#con-property}

An entity property defines a property of an entity. It is similar to the
endpoint property defined by Section 7.1 of [](#RFC7285), but can be general
besides network-aware.

For example, an `ipv4` entity may have a property whose value is an Autonomous
System (AS) number indicating the AS which this IPv4 address is owned by.

## Resource {#con-resource}

## Entity Domain {#con-entity-domain}

### Resource-Specific Entity Domain

### Aggregated Entity Domain

### Hierarchy and Inheritance {#def-hierarchy-and-inheritance}

Entities in a given domain MAY form a hierarchy based on entity identifiers, and
introducing hierarchy allows the introduction of inheritance. Each entity domain
type MUST define its own hierarchy and inheritance rules when registered. The
hierarchy and inheritance rule makes it possible for an entity to inherit a
property value from another entity in the same domain.
<!--If and only
if the property of an entity is undefined, the hierarchy and inheritance rules
are applied. [YRY: Do we need this?] [Jensen: I think this feature is for reducing the response size.] -->
